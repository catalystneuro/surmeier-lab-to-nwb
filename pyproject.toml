[project]
name = "surmeier-lab-to-nwb"
version = "0.0.1"
description = "NWB conversion scripts, functions, and classes for Surmeier  conversion"
readme = "README.md"
authors = [{ name = "CatalystNeuro", email = "ben.dichter@catalystneuro.com" }]
maintainers = [{ name = "CatalystNeuro", email = "ben.dichter@catalystneuro.com" }]
license = { file = "LICENSE" }
requires-python = ">=3.12"
classifiers = [
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]

dependencies = [
  "neuroconv>=0.7.4",
  "nwbinspector",
  "lxml",
  "nd2>=0.10.3",
  "xmltodict>=0.14.2",
  "tifffile>=2025.5.10",
  "roiextractors>=0.5.13",
  "hdmf==4.0.0",
  "astropy>=6.1.7",
  "ndx-optogenetics",
  "pandas>=2.2.3",
  "openpyxl>=3.1.5",
  "opencv-python-headless>=4.12.0.88",
  "tqdm>=4.67.1",
]
# Astropy I use for the date

[project.urls]
Repository="https://github.com/catalystneuro/surmeier-lab-to-nwb"

[project.optional-dependencies]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build]
include = [
  "*.yaml",
  "*.yml",
  "*.json",
]  # This includes the yaml (usually metadata) and any schemas you might need on both the sdist and wheel

[tool.hatch.build.targets.wheel]
packages = ["src/surmeier_lab_to_nwb"]

[tool.hatch.build.targets.sdist]
packages = ["src/surmeier_lab_to_nwb"]

[tool.black]
line-length = 120
target-version = ['py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.toml
  |\.yml
  |\.md
  |\.txt
  |\.sh
  |\.git
  |\.ini
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''


[tool.codespell]
skip = '*.git*,*.pdf,*.css, *.ipynb,*/assets/*,*.txt'
check-hidden = true
ignore-words-list = 'assertin,sems,sinlge,singl'


[tool.ruff]

[tool.ruff.lint]
select = [
    "F401",  # Unused import
    "I",  # All isort rules
]
fixable = ["ALL"]

[tool.ruff.lint.isort]
relative-imports-order = "closest-to-furthest"
known-first-party = ["surmeier_lab_to_nwb"]

[tool.uv.sources]
neuroconv = { path = "../neuroconv", editable = true }
roiextractors = { path = "../roiextractors", editable = true }
ndx-optogenetics = { path = "../ndx-optogenetics", editable = true }

[tool.uv]
config-settings = { editable_mode = "compat" }

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "matplotlib>=3.10.3",
    "pre-commit>=4.2.0",
    "seaborn>=0.13.2",
    "poethepoet>=0.32.1",
    "xarray>=2025.7.1",
]


[tool.poe]
executor.type = "uv"

[tool.poe.tasks]
run_all_conversions = { sequence = [
    "run_figure_1_conversions",
    "run_figure_2_conversions",
    "run_figure_3_conversions",
    "run_figure_4_conversions",
    "run_figure_5_conversions",
    "run_figure_6_conversions",
    "run_figure_7_conversions",
    "run_figure_8_conversions",
    "run_supplementary_figure_3_conversions",
], help = "Run all figure conversion scripts." }

run_figure_1_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_1_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_1_somatic_excitability.py''', help = "Run figure 1 conversion scripts." }
run_figure_2_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_2_optical_stimuli.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_2_spine_density.py''', help = "Run figure 2 conversion scripts." }
run_figure_3_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_3_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_3_somatic_excitability.py''', help = "Run figure 3 conversion scripts." }
run_figure_4_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/confocal_spine_density/figure_4_confocal_spine_density_nikon.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_4_optical_stimuli.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_4_spine_density.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/confocal_spine_density/figure_4h_confocal_spine_density_olympus.py''', help = "Run figure 4 conversion scripts." }
run_figure_5_conversions = { cmd = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/acetylcholine_biosensor/figure_5_acetylcholine_biosensor.py''', help = "Run figure 5 conversion scripts." }
run_figure_6_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_6_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_6_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_6_spine_density.py''', help = "Run figure 6 conversion scripts." }
run_figure_7_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/aim_behavior/figure_7_behavioral_aim_experiments.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/videos/figure_7_behavioral_videos.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_7_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_7_oxoM_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_7_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_7_spine_density.py''', help = "Run figure 7 conversion scripts." }
run_figure_8_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/aim_behavior/figure_8_behavioral_aim_experiments.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_8_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_8_spine_density.py''', help = "Run figure 8 conversion scripts." }
run_supplementary_figure_3_conversions = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/videos/supplementary_figure_3_behavioral_videos.py''', help = "Run supplementary figure 3 conversion scripts." }

# Experiment type conversion tasks
run_conversion_dendritic_excitability = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_1_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_3_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_6_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_7_dendritic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/dendritic_excitability/figure_7_oxoM_dendritic_excitability.py''', help = "Run all dendritic excitability conversion scripts." }
run_conversion_somatic_excitability = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_1_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_3_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_6_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_7_somatic_excitability.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/somatic_excitability/figure_8_somatic_excitability.py''', help = "Run all somatic excitability conversion scripts." }
run_conversion_spine_density = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_2_optical_stimuli.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_2_spine_density.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_4_optical_stimuli.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_4_spine_density.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_6_spine_density.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_7_spine_density.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/spine_density/figure_8_spine_density.py''', help = "Run all spine density conversion scripts." }
run_conversion_confocal_spine_density = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/confocal_spine_density/figure_4_confocal_spine_density_nikon.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/confocal_spine_density/figure_4h_confocal_spine_density_olympus.py''', help = "Run all confocal spine density conversion scripts." }
run_conversion_aim_behavior = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/aim_behavior/figure_7_behavioral_aim_experiments.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/aim_behavior/figure_8_behavioral_aim_experiments.py''', help = "Run all AIM behavior conversion scripts." }
run_conversion_videos = { shell = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/videos/figure_7_behavioral_videos.py && python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/videos/supplementary_figure_3_behavioral_videos.py''', help = "Run all video conversion scripts." }
run_conversion_ach_biosensor = { cmd = '''python src/surmeier_lab_to_nwb/zhai2025/conversion_scripts/acetylcholine_biosensor/figure_5_acetylcholine_biosensor.py''', help = "Run acetylcholine biosensor conversion script." }
